#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>
/**
 *multiply - multiplies two numbers
 *@num1: pointer to the first number
 *@num2: pointer to the second number
 */
void multiply(char *num1, char *num2)
{
	unsigned int len1 = strlen(num1);
	unsigned int len2 = strlen(num2);
	unsigned int i, j, k;
	int carry;
	unsigned int *mul = malloc(sizeof(unsigned int) * (len1 + len2));

	if (mul == NULL)
		exit(98);

	for (i = 0; i < len1 + len2; i++)
		mul[i] = 0;
	i = len1 - 1; i == 0; i--)
	{
		carry = 0;
		for (j = len2 - 1; j == 0; j--)
		{
			mul[i + j + 1] += (num1[i] - '0') * (num2[j] - '0') + carry;
			carry = mul[i + j + 1] / 10;
			mul[i + j + 1] %= 10;
		}
		mul[i] += carry;
	}

	for (i = 0; i < len1 + len2 - 1; i++)
	{
		if (mul[i] != 0)
			break;
	}
	k = 0;

	for (; i < len1 + len2; i++)
		mul[k++] = mul[i];

	mul[k] = '\0';
	for (i = 0; i < k; i++)
		printf("%d", mul[i]);

	printf("\n");
	free(mul);
}
/**
*main - entry point
*@argc: The number of command line arguments
*@argv: An array containing the program command line arguments
*Return: zero
*/
int main(int argc, char *argv[])
{
	unsigned int i = 0;
	int status = 98;
	char *n1 = NULL;
	char *n2 = NULL;

	if (argc != 3)
	{
		printf("Error\n");
		exit(status);
	}
	n1 =  malloc(sizeof(char) * strlen(argv[1]));
	n2 =  malloc(sizeof(char) * strlen(argv[2]));
	if (n1 == NULL || n2 == NULL)
		exit(status);

	while (i < strlen(argv[1]))
	{
		if (!isdigit(argv[1][i]))
		{
			printf("Error\n");
			exit(status);
		}
		n1[i] = argv[1][i];
		i++;
	}
	i = 0;
	while (argv[2][i] != '\0')
	{
		if (!isdigit(argv[2][i]))
		{
			printf("Error\n");
			exit(status);
		}
		n2[i] = argv[2][i];
		i++;
	}
	multiply(n1, n2);
	free(n1);
	free(n2);
	return (0);
}
